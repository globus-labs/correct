name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.4'
          cache: 'pip'
      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          client_id: ${{ secrets.GLOBUS_CLI_CLIENT_ID }}
          client_secret: ${{ secrets.GLOBUS_CLI_CLIENT_SECRET }}
          endpoint_uuid: '4b116d3c-1703-4f8f-9f6f-39921e5864df'
          function_uuid: 'd0031aba-5f41-4cc4-9d12-cb980ef10cd5'
          args: '[]'
          kwargs: '{"inpt": "test"}'
      - name: Print Output
        id: output
        run: echo "${STEPS_TEST_ACTION_OUTPUTS_RESPONSE}"
        env:
          STEPS_TEST_ACTION_OUTPUTS_RESPONSE:
            ${{ steps.test-action.outputs.response }}
